Menu="OtherSettings"
Type="xmenu"
Title="SnapRAID"
Icon="hdd-o"
Tag="hdd-o"
Markdown="false"
---
<?
$snapraid_running = (intval(trim(htmlspecialchars(shell_exec( "if pgrep -x snaprunner >/dev/null 2>&1; then echo 1; else echo 0; fi" )))) === 1 );
$snapraid_lastcmd = (file_exists("/tmp/snap_lastcmd") ? (file_get_contents("/tmp/snap_lastcmd") ?? "n/a") : "n/a");
?>

<style type="text/css">
.snaplog {
    height: 400px;
    max-height: 400px;
    overflow: auto;
    background-color: #eeeeee;
    word-break: normal !important;
    word-wrap: normal !important;
    white-space: pre !important;
}
</style>

<table class="tablesorter shift">
<thead><tr><th style="text-transform: none;">
<strong>(Last) Command:</strong> <em><?=$snapraid_lastcmd?></em>
<?if ($snapraid_running):?><span style="float:right;margin-right:10px"><i id="logcontrol" class="fa fa-pause"></i></span><?endif;?>
</th></tr></thead>
</table>

<span id="logviewer"></span>

<form markdown="0" id="snapcommands" name="snapcommands" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" id="command" name="#command" value="">
<input class="snaprun" type="button" id="snapstatus" value="STATUS">
<input class="snaprun" type="button" id="snapdiff" value="DIFF">
<input class="snaprun" type="button" id="snapsync" value="SYNC">
<input class="snaprun" type="button" id="snapscrub" value="SCRUB">
<input class="snaprun" type="button" id="snaptouch" value="TOUCH">
<input class="snaprun" type="button" id="snapcheck" value="CHECK">
<input class="snaprun" type="button" id="snapfix" value="FIX">
<input class="snaprun" type="button" id="snapfixerrors" value="FIX ERRORS">
<input class="snapnotrun" type="button" id="snapstop" value="STOP OPERATION" style="float:right;margin-right:10px" disabled="true">
</form> 

<script type="text/javascript">
function getSnapLogs() {
    $.get('/plugins/dwsnap/include/dwsnap_logger.php',function(data) {
        if (data) { 
            $('#logviewer').html(data); 
	        var pre = $(".snaplog");
	        pre.scrollTop(pre.prop("scrollHeight"));
	    }
    });
    clearTimeout(timers.getSnapLogs);

    <?if ($snapraid_running):?>
    timers.getSnapLogs = setTimeout(getSnapLogs, 1000);
    <?endif;?>
}
<?if ($snapraid_running):?>
function toggleSnapLogs() {
    if($('#logcontrol').attr("class") == "fa fa-pause") {
        $('#logcontrol').attr("class", "fa fa-play");
        clearTimeout(timers.getSnapLogs);
    } else {
        $('#logcontrol').attr("class", "fa fa-pause");
        getSnapLogs();
    }
}
<?endif;?>
$(function(){
    <?if ($snapraid_running):?>
    $('.snaprun').prop('disabled', true);
    $('.snapnotrun').prop('disabled', false);
    $('#logcontrol').click(toggleSnapLogs);
    <?endif;?>

    $('#snapstatus').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/status');
        $('#snapcommands').submit();
    });
    $('#snapdiff').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/diff');
        $('#snapcommands').submit();
    });
    $('#snapsync').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/sync');
        $('#snapcommands').submit();
    });
    $('#snapscrub').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/scrub');
        $('#snapcommands').submit();
    });
    $('#snaptouch').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/touch');
        $('#snapcommands').submit();
    });
    $('#snapcheck').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/check');
        $('#snapcommands').submit();
    });
    $('#snapfix').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/fix');
        $('#snapcommands').submit();
    });
    $('#snapfixerrors').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/fixerrors');
        $('#snapcommands').submit();
    });
    $('#snapstop').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/stop');
        $('#snapcommands').submit();
    });

    getSnapLogs();
});
</script>
