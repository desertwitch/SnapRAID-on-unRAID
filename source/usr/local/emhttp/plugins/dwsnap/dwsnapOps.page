Menu="OtherSettings"
Type="xmenu"
Title="SnapRAID"
Icon="hdd-o"
Tag="hdd-o"
Markdown="false"
---
<?
/* Copyright Derek Macias (parts of code from NUT package)
 * Copyright macester (parts of code from NUT package)
 * Copyright gfjardim (parts of code from NUT package)
 * Copyright SimonF (parts of code from NUT package)
 * Copyright desertwitch
 *
 * Copyright Dan Landon
 * Copyright Bergware International
 * Copyright Lime Technology
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License 2
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 */
require_once '/usr/local/emhttp/plugins/dwsnap/include/dwsnap_config.php';
$snap_lastsync_html = "-";
$snap_lastscrub_html = "-";
if($dwsnap_lastsync !== "-") { $snap_lastsync_html = $dwsnap_lastsync . " (<strong>" . dwsnap_time_ago($dwsnap_lastsync) . "</strong>)"; } else { $snap_lastsync_html = "<span class='orange-text'><strong>Never</strong></span>"; }
if($dwsnap_lastscrub !== "-") { $snap_lastscrub_html = $dwsnap_lastscrub . " (<strong>" . dwsnap_time_ago($dwsnap_lastscrub) . "</strong>)"; } else { $snap_lastscrub_html = "<span class='orange-text'><strong>Never</strong></span>"; }
?>

<style type="text/css">
.snaplog {
    height: 400px;
    max-height: 400px;
    overflow: auto;
    word-break: normal !important;
    word-wrap: normal !important;
    white-space: pre !important;
}
.snapdisks tr:nth-child(2) > th {
    text-align: center !important;
}
.snapdisks td {
    text-align: center !important;
}
.snapdisks input {
    height: 30px;
    font-size: x-small;
}
.snapdisktype {
    font-family: bitstream;
    font-size: 1.1rem;
}
</style>

<table class="tablesorter shift" autofocus>
    <thead>
        <tr>
            <th><i id="snapstatusicon" class="fa fa-cog fa-spin" style="display:none;"></i> <strong>Array Operation Screen</strong></th>
            <th style="text-transform: none;"><strong>Started:</strong> <em><?=$dwsnap_laststart?></em></th>
            <th style="text-transform: none;"><strong>Finished:</strong> <em><?=$dwsnap_lastfinish?></em><span style="float:right;"><strong>Refresh:</strong> <i id="logcontrol" class="fa fa-refresh fa-spin"></i></span></th>
        </tr>
    </thead>
</table>

<span id="logviewer"></span>

<form markdown="0" id="snapcommands" name="snapcommands" method="POST" action="/update.php" target="progressFrame">
    <input type="hidden" id="command" name="#command" value="">
    <input type="hidden" id="arg1" name="#arg[1]" value="">
    <input type="hidden" id="arg2" name="#arg[2]" value="">
    <input type="hidden" id="arg3" name="#arg[3]" value="">
    <input type="hidden" id="arg4" name="#arg[4]" value="">
    <input type="hidden" id="arg5" name="#arg[5]" value="">
    <input type="hidden" id="arg6" name="#arg[6]" value="">

    <input class="snaprun" type="button" id="snapstatus" value="STATUS">
    <input class="snaprun" type="button" id="snaplist" value="LIST">
    <input class="snaprun" type="button" id="snapdiff" value="DIFF">
    <input class="snaprun" type="button" id="snapdup" value="DUP">
    <input class="snaprun" type="button" id="snapscrub" value="SCRUB">
    <input class="snaprun" type="button" id="snapcheck" value="CHECK">

    <span style="float:right;">
        <input class="snaprun" type="button" id="clearoutput" value="CLEAR SCREEN">
        <input class="snaprun" type="button" id="clearlogs" value="CLEAR ALL LOGS">
        <input class="snapnotrun" type="button" id="snapstop" value="STOP OPERATION">
        <input class="snapnotrun" type="button" id="snapkill" value="KILL OPERATION">
    </span><br>

    <input class="snaprun" type="button" id="snapsync" value="SYNC">
    <input class="snaprun" type="button" id="snaphashedsync" value="PREHASHED SYNC">
    <input class="snaprun" type="button" id="snaptouch" value="TOUCH">
    <input class="snaprun" type="button" id="snapfix" value="FIX">
    <input class="snaprun" type="button" id="snapfixmissing" value="FIX MISSING">
    <input class="snaprun" type="button" id="snapfixerrors" value="FIX ERRORS">

    <span style="float:right;">
        <input class="snaprun" type="button" id="crontest" value="RUN MAINTENANCE CRONJOB">
    </span><br>

    <strong>Advanced Parameters:</strong>
    <input type="checkbox" id="snapsync-forcezero" value="snapsync-forcezero">(Sync) Force Zero</input>
    <input type="checkbox" id="snapsync-forceempty" value="snapsync-forceempty">(Sync) Force Empty</input>
    <input type="checkbox" id="snapsync-forcefull" value="snapsync-forcefull">(Sync) Force Full</input>
    <input type="checkbox" id="snapcheck-auditonly" value="snapcheck-auditonly">(Check) Audit Only</input>
    <br><strong>Restrictive Filters:</strong>
    (Check/Fix) <input type="text" id="snapfix-pattern" class="narrow" placeholder="Path Pattern (Check Manual)">
    (Check/Fix) <input type="text" id="snapfix-diskpattern" class="narrow" placeholder="Disk Name">

    <br><br>

    <div><strong>INFORMATION:</strong></div>
    <div>When using SnapRAID on top of Unraid's parity, always attempt to recover drive failures using Unraid's parity first, before using any SnapRAID recovery functions.</div>
    <div>Ideally you can restore a drive failure with Unraid and then fix any file level corruption on the recovered drive using a previous (non-corrupted) SnapRAID snapshot.</div>
    <div>A failing drive may write bogus data before Unraid disables it (if at all), and SnapRAID may fill that gap to recover from corruption using a sync state from before that.</div>
    
    <br>

    <table class="tablesorter snapdisks">
        <thead>
            <tr>
                <th colspan="10"><strong>OVERVIEW OF ARRAY WITH INDIVIDUAL DISKS</strong> <span style="text-transform: none;float:right;"><span style="margin-left:10px;"><strong>Last Sync:</strong> <?=$snap_lastsync_html?></span><span style="margin-left:10px;"><strong>Last Scrub:</strong> <?=$snap_lastscrub_html?></span></span></th>
            </tr>
            <tr>
                 <th><strong>Disk Type</strong></th><th><strong>Disk Name</strong></th><th><strong>Mountpoint</strong></th><th><strong>Mounted</strong></th><th><strong>FileSystem</strong></th><th><strong>Total Space</strong></th><th><strong>Used Space</strong></th><th><strong>Free Space</strong></th><th><strong>Utilization</strong></th><th><strong>Disk-Specific Operations</strong></th>
            </tr>
        </thead>
        <tbody>
            <?
            foreach ($dwsnap_parity_disks as $snap_parity_disk){
                $snap_disk_fs = htmlspecialchars(shell_exec("cat /etc/mtab | grep " . $snap_parity_disk[2] . " | awk '{print $3}'") ?? "-");
                $snap_disk_util = htmlspecialchars(shell_exec("df -h | grep " . $snap_parity_disk[2] . " | awk '{print $5}'") ?? "-");
                $snap_disk_free = htmlspecialchars(shell_exec("df -h | grep " . $snap_parity_disk[2] . " | awk '{print $4}'") ?? "-");
                $snap_disk_used = htmlspecialchars(shell_exec("df -h | grep " . $snap_parity_disk[2] . " | awk '{print $3}'") ?? "-");
                $snap_disk_total = htmlspecialchars(shell_exec("df -h | grep " . $snap_parity_disk[2] . " | awk '{print $2}'") ?? "-");
                $snap_disk_status = ($snap_disk_fs !== "-") ? "<i class='fa fa-check green-text'></i>" : "<i class='fa fa-times red-text'></i>"; 
                echo("<tr><td class='snapdisktype'>PARITY</td><td>$snap_parity_disk[1]</td><td><a class='view' href='/Shares/Browse?dir=$snap_parity_disk[2]/' target='_blank'><i class='icon-u-tab' title='Browse $snap_parity_disk[2]/'></i></a>$snap_parity_disk[2]</td><td>$snap_disk_status</td><td>$snap_disk_fs</td><td>$snap_disk_total</td><td>$snap_disk_used</td><td>$snap_disk_free</td><td>$snap_disk_util</td><td><input type='button' class='snaprun' id='$snap_parity_disk[1]-check' value='Check'><input type='button' class='snaprun' id='$snap_parity_disk[1]-fix' value='Fix'><input type='button' class='snaprun' id='$snap_parity_disk[1]-fixmissing' value='Fix Missing'></td></tr>");
            }
            foreach ($dwsnap_data_disks as $snap_data_disk){
                $snap_disk_fs = htmlspecialchars(shell_exec("cat /etc/mtab | grep " . $snap_data_disk[2] . " | awk '{print $3}'") ?? "-");
                $snap_disk_util = htmlspecialchars(shell_exec("df -h | grep " . $snap_data_disk[2] . " | awk '{print $5}'") ?? "-");
                $snap_disk_free = htmlspecialchars(shell_exec("df -h | grep " . $snap_data_disk[2] . " | awk '{print $4}'") ?? "-");
                $snap_disk_used = htmlspecialchars(shell_exec("df -h | grep " . $snap_data_disk[2] . " | awk '{print $3}'") ?? "-");
                $snap_disk_total = htmlspecialchars(shell_exec("df -h | grep " . $snap_data_disk[2] . " | awk '{print $2}'") ?? "-");
                $snap_disk_status = ($snap_disk_fs !== "-") ? "<i class='fa fa-check green-text'></i>" : "<i class='fa fa-times red-text'></i>"; 
                echo("<tr><td class='snapdisktype'>DATA</td><td>$snap_data_disk[1]</td><td><a class='view' href='/Shares/Browse?dir=$snap_data_disk[2]/' target='_blank'><i class='icon-u-tab' title='Browse $snap_data_disk[2]/'></i></a>$snap_data_disk[2]</td><td>$snap_disk_status</td><td>$snap_disk_fs</td><td>$snap_disk_total</td><td>$snap_disk_used</td><td>$snap_disk_free</td><td>$snap_disk_util</td><td><input type='button' class='snaprun' id='$snap_data_disk[1]-check' value='Check'><input type='button' class='snaprun' id='$snap_data_disk[1]-fix' value='Fix'><input type='button' class='snaprun' id='$snap_data_disk[1]-fixmissing' value='Fix Missing'></td></tr>");
            }
            ?>
        </tbody>
    </table>
</form> 

<script type="text/javascript">
function getSnapLogs() {
    $.get('/plugins/dwsnap/include/dwsnap_logger.php',function(data) {
        if (data) { 
            $('#logviewer').html(data); 
	        var pre = $(".snaplog");
	        pre.scrollTop(pre.prop("scrollHeight"));
	    }
    });
    clearTimeout(timers.getSnapLogs);
    timers.getSnapLogs = setTimeout(getSnapLogs, 1000);
}
function getSnapStatus() {
    $.get('/plugins/dwsnap/include/dwsnap_status.php',function(data) {
        if (data) { 
            if(data === "RUNNING:YES") {
                $('#snapstatusicon').show();
                $('.snaprun').prop('disabled', true);
                $('.snapnotrun').prop('disabled', false);
            } else if (data === "RUNNING:NO") {
                if($('#snapstatusicon').is(":visible")) {
                    location = '/Settings/dwsnapOps';
                }
                $('#snapstatusicon').hide();
                $('.snaprun').prop('disabled', false);
                $('.snapnotrun').prop('disabled', true);
                $('#logcontrol').attr("class", "fa fa-refresh");
                clearTimeout(timers.getSnapLogs);
            }
	    }
    });
    clearTimeout(timers.getSnapStatus);
    timers.getSnapStatus = setTimeout(getSnapStatus, 3000);
}
function toggleSnapLogs() {
    if($('#logcontrol').attr("class") == "fa fa-refresh fa-spin") {
        $('#logcontrol').attr("class", "fa fa-refresh");
        clearTimeout(timers.getSnapLogs);
    } else {
        $('#logcontrol').attr("class", "fa fa-refresh fa-spin");
        getSnapLogs();
    }
}
$(function(){
    $('#logcontrol').click(toggleSnapLogs);

    $('#snapstatus').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('status');
        $('#snapcommands').submit();
    });
    $('#snaplist').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('list');
        $('#snapcommands').submit();
    });
    $('#snapdiff').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('diff');
        $('#snapcommands').submit();
    });
    $('#snapdup').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('dup');
        $('#snapcommands').submit();
    });
    $('#snapscrub').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('scrub');
        $('#snapcommands').submit();
    });
    $('#snapcheck').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('check');
        if($('#snapcheck-auditonly').is(':checked')) {
            $('#arg2').val('-a');
        }
        if($('#snapfix-diskpattern').val()) {
            $('#arg3').val('-d');
            $('#arg4').val($('#snapfix-diskpattern').val());
        }
        if($('#snapfix-pattern').val()) {
            $('#arg5').val('-f');
            $('#arg6').val($('#snapfix-pattern').val());
        }
        $('#snapcommands').submit();
    });

    $('#clearoutput').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/clearoutput');
        $('#snapcommands').submit();
    });
    $('#clearlogs').click(function(){
        swal({
            title: "Are you sure?",
            text: "This action will delete any stored SnapRAID logfiles.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Clear All Logs",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/clearlogs');
                $('#snapcommands').submit();
            });
    });
    $('#snapstop').click(function(){
        swal({
            title: "Are you sure?",
            text: "This action will (gracefully) stop all running SnapRAID instances.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Stop Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/stop');
                $('#snapcommands').submit();
            });
    });
    $('#snapkill').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This action will kill all running SnapRAID instances.<br>Be advised data corruption can be a result of this action.",
            type: "error",
            showCancelButton: true,
            confirmButtonText: "Kill Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/kill');
                $('#snapcommands').submit();
            });
    });

    $('#snapsync').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('sync');
                if($('#snapsync-forcezero').is(':checked')) {
                    $('#arg2').val('-Z');
                }
                if($('#snapsync-forceempty').is(':checked')) {
                    $('#arg3').val('-E');
                }
                if($('#snapsync-forcefull').is(':checked')) {
                    $('#arg4').val('-F');
                }
                $('#snapcommands').submit();
            });
    });  
    $('#snaphashedsync').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('sync');
                $('#arg2').val('-h');
                if($('#snapsync-forcezero').is(':checked')) {
                    $('#arg3').val('-Z');
                }
                if($('#snapsync-forceempty').is(':checked')) {
                    $('#arg4').val('-E');
                }
                if($('#snapsync-forcefull').is(':checked')) {
                    $('#arg5').val('-F');
                }
                $('#snapcommands').submit();
            });
    });
    $('#snaptouch').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('touch');
                $('#snapcommands').submit();
            });
    });
    $('#snapfix').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('fix');
                if($('#snapfix-diskpattern').val()) {
                    $('#arg2').val('-d');
                    $('#arg3').val($('#snapfix-diskpattern').val());
                }
                if($('#snapfix-pattern').val()) {
                    $('#arg4').val('-f');
                    $('#arg5').val($('#snapfix-pattern').val());
                }
                $('#snapcommands').submit();
            });
    });
    $('#snapfixmissing').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('fix');
                $('#arg2').val('-m');
                if($('#snapfix-diskpattern').val()) {
                    $('#arg3').val('-d');
                    $('#arg4').val($('#snapfix-diskpattern').val());
                }
                if($('#snapfix-pattern').val()) {
                    $('#arg5').val('-f');
                    $('#arg6').val($('#snapfix-pattern').val());
                }
                $('#snapcommands').submit();
            });
    });
    $('#snapfixerrors').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('fix');
                $('#arg2').val('-e');
                if($('#snapfix-diskpattern').val()) {
                    $('#arg3').val('-d');
                    $('#arg4').val($('#snapfix-diskpattern').val());
                }
                if($('#snapfix-pattern').val()) {
                    $('#arg5').val('-f');
                    $('#arg6').val($('#snapfix-pattern').val());
                }
                $('#snapcommands').submit();
            });
    });
    $('#crontest').click(function(){
        swal({
            title: "Are you sure?",
            text: "This action is <u>not simulated</u>, it will really run (as configured).",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/crontest');
                $('#snapcommands').submit();
            });
    });

    <?
    foreach ($dwsnap_parity_disks as $snap_parity_disk) {
        echo("\$('#".$snap_parity_disk[1]."-check').click(function(){\$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('check'); \$('#arg2').val('-d'); \$('#arg3').val('".$snap_parity_disk[1]."'); \$('#snapcommands').submit(); });\n");
        echo("\$('#".$snap_parity_disk[1]."-fix').click(function(){ swal({ title: \"Destructive Operation\", text: \"This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.\", type: \"warning\", showCancelButton: true, confirmButtonText: \"Start Operation\", html: true }, function(){ \$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('fix'); \$('#arg2').val('-d'); \$('#arg3').val('".$snap_parity_disk[1]."'); \$('#snapcommands').submit(); }); });\n");
        echo("\$('#".$snap_parity_disk[1]."-fixmissing').click(function(){ swal({ title: \"Destructive Operation\", text: \"This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.\", type: \"warning\", showCancelButton: true, confirmButtonText: \"Start Operation\", html: true }, function(){ \$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('fix'); \$('#arg2').val('-m'); \$('#arg3').val('-d'); \$('#arg4').val('".$snap_parity_disk[1]."'); \$('#snapcommands').submit(); }); });\n");
    }
    foreach ($dwsnap_data_disks as $snap_data_disk) {
        echo("\$('#".$snap_data_disk[1]."-check').click(function(){\$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('check'); \$('#arg2').val('-d'); \$('#arg3').val('".$snap_data_disk[1]."'); \$('#snapcommands').submit(); });\n");
        echo("\$('#".$snap_data_disk[1]."-fix').click(function(){ swal({ title: \"Destructive Operation\", text: \"This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.\", type: \"warning\", showCancelButton: true, confirmButtonText: \"Start Operation\", html: true }, function(){ \$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('fix'); \$('#arg2').val('-d'); \$('#arg3').val('".$snap_data_disk[1]."'); \$('#snapcommands').submit(); }); });\n");
        echo("\$('#".$snap_data_disk[1]."-fixmissing').click(function(){ swal({ title: \"Destructive Operation\", text: \"This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.\", type: \"warning\", showCancelButton: true, confirmButtonText: \"Start Operation\", html: true }, function(){ \$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('fix'); \$('#arg2').val('-m'); \$('#arg3').val('-d'); \$('#arg4').val('".$snap_data_disk[1]."'); \$('#snapcommands').submit(); }); });\n");
    }
    ?>

    getSnapStatus()
    getSnapLogs();

    // dynamix plugin update api
    <?if (function_exists('plugin_update_available') && $version = plugin_update_available('dwsnap')):?>
        showNotice('SnapRAID <?=htmlspecialchars($version);?> available. <a>Update</a>','dwsnap');
        $('#user-notice a').on('click', function () {
        $('#user-notice').empty();
    });
    <?endif;?>
});
</script>
