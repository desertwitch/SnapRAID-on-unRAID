Menu="OtherSettings"
Type="xmenu"
Title="SnapRAID"
Icon="hdd-o"
Tag="hdd-o"
Markdown="false"
---
<?
/* Copyright Derek Macias (parts of code from NUT package)
 * Copyright macester (parts of code from NUT package)
 * Copyright gfjardim (parts of code from NUT package)
 * Copyright SimonF (parts of code from NUT package)
 * Copyright desertwitch
 *
 * Copyright Dan Landon
 * Copyright Bergware International
 * Copyright Lime Technology
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License 2
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 */
require_once '/usr/local/emhttp/plugins/dwsnap/include/dwsnap_config.php';
$snap_lastsync_html = "-";
$snap_lastscrub_html = "-";
if($dwsnap_lastsync !== "-") { $snap_lastsync_html = $dwsnap_lastsync . " (<strong>" . dwsnap_time_ago($dwsnap_lastsync) . "</strong>)"; } else { $snap_lastsync_html = "<span class='orange-text'><strong>Never</strong></span>"; }
if($dwsnap_lastscrub !== "-") { $snap_lastscrub_html = $dwsnap_lastscrub . " (<strong>" . dwsnap_time_ago($dwsnap_lastscrub) . "</strong>)"; } else { $snap_lastscrub_html = "<span class='orange-text'><strong>Never</strong></span>"; }
?>

<style type="text/css">
.snaplog {
    height: 400px;
    max-height: 400px;
    overflow: auto;
    word-break: normal !important;
    word-wrap: normal !important;
    white-space: pre !important;
    background: transparent url("/plugins/dwsnap/images/screen.png") no-repeat scroll center; 
}
.snapdisks tr:nth-child(2) > th {
    text-align: center !important;
}
.snapdisks td {
    text-align: center !important;
}
.snapdisks input {
    height: 30px;
    font-size: x-small;
}
.snapdisktype {
    font-family: bitstream;
    font-size: 1.1rem;
}
</style>

<table class="tablesorter shift" autofocus>
    <thead>
        <tr>
            <th><i id="snapstatusicon" class="fa fa-cog fa-spin" style="display:none;"></i> <strong>Array Operation Screen</strong></th>
            <th style="text-transform: none;"><strong>Started:</strong> <em><?=$dwsnap_laststart?></em></th>
            <th style="text-transform: none;"><strong>Finished:</strong> <em><?=$dwsnap_lastfinish?></em><span style="float:right;"><strong>Refresh:</strong> <i id="logcontrol" class="fa fa-refresh fa-spin"></i></span></th>
        </tr>
    </thead>
</table>

<span id="logviewer"></span>

<form markdown="0" id="snapcommands" name="snapcommands" method="POST" action="/update.php" target="progressFrame">
    <input type="hidden" id="command" name="#command" value="">
    <input type="hidden" id="arg1" name="#arg[1]" value="">
    <input type="hidden" id="arg2" name="#arg[2]" value="">
    <input type="hidden" id="arg3" name="#arg[3]" value="">
    <input type="hidden" id="arg4" name="#arg[4]" value="">
    <input type="hidden" id="arg5" name="#arg[5]" value="">
    <input type="hidden" id="arg6" name="#arg[6]" value="">

    <input class="snaprun snaphelptip" type="button" id="snapstatus" value="STATUS" title="Prints a summary of the state of the disk array. It includes information about the parity fragmentation, how long the blocks have not been checked, and all the recorded silent errors encountered while scrubbing. Note that the information presented refers to the last time you ran SYNC. Later modifications are not taken into account.">
    <input class="snaprun snaphelptip" type="button" id="snaplist" value="LIST" title="Lists all the files contained in the array at the time of the last SYNC.">
    <input class="snaprun snaphelptip" type="button" id="snapdiff" value="DIFF" title="Lists all the files modified since the last SYNC and not part of the snapshot in this state. This command doesn't check the file data, but only the file time-stamp size and inode (compared against the snapshot).">
    <input class="snaprun snaphelptip" type="button" id="snapdup" value="DUP" title="Lists all the duplicate files. Two files are assumed equal if their hashes are matching.">
    <input class="snaprun snaphelptip" type="button" id="snapscrub" value="SCRUB" title="Scrubs the array, checking for silent or input/output errors in data and parity disks. For each command invocation, about the 8% of the array is checked, but nothing that was already scrubbed in the last 10 days.">
    <input class="snaprun snaphelptip" type="button" id="snapcheck" value="CHECK" title="Verify all the files and the parity data. It works like FIX, but it only simulates a recovery and no changes are written.">

    <span style="float:right;">
        <input class="snaprun snaphelptip" type="button" id="clearoutput" value="CLEAR SCREEN" title="Clears the output screen of the current/previous array operation.">
        <input class="snaprun snaphelptip" type="button" id="clearlogs" value="CLEAR ALL LOGS" title="Deletes all SnapRAID log files, also including the output screen of the current/previous array operation.">
        <input class="snapnotrun snaphelptip" type="button" id="snapstop" value="STOP OPERATION" title="Attempts to (gracefully) stop all running SnapRAID instances.">
        <input class="snapnotrun snaphelptip" type="button" id="snapkill" value="KILL OPERATION" title="After a last attempt of (gracefully) stopping all running SnapRAID instances, this action hard-kills all still running SnapRAID instances with SIGKILL, beware that DATA CORRUPTION is very possible with this action.">
    </span><br>

    <input class="snaprun snaphelptip" type="button" id="snapsync" value="SYNC" title="Updates the parity information. All the modified files in the disk array are read, and the corresponding parity data is updated. This is the equivalent of taking a snapshot, which will be the base for all recoveries.">
    <input class="snaprun snaphelptip" type="button" id="snaphashedsync" value="PREHASHED SYNC" title="Updates the parity information. All the modified files in the disk array are read, and the corresponding parity data is updated. This is the equivalent of taking a snapshot, which will be the base for all recoveries. A preliminary hashing phase of all the new data, to have an additional verification before the actual parity computation, is performed.">
    <input class="snaprun snaphelptip" type="button" id="snaptouch" value="TOUCH" title="Sets arbitrarily the sub-second time-stamp of all the files that have it at zero. This improves the SnapRAID capability to recognize moved and copied files as it makes the time-stamp almost unique, removing possible duplicates.">
    <input class="snaprun snaphelptip" type="button" id="snapfix" value="FIX" title="Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot. The FIX command doesn't differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC. If no other option is specified the full array is processed. Use the filter options to select a subset of files or disks to operate on if you do not want this.">
    <input class="snaprun snaphelptip" type="button" id="snapfixmissing" value="FIX MISSING" title="Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot. The FIX command doesn't differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC. Only the files missing or deleted from the array are processed by this specific command.">
    <input class="snaprun snaphelptip" type="button" id="snapfixerrors" value="FIX ERRORS" title="Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot. The FIX command doesn't differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC. Only files that have blocks marked with silent or input/output errors during previous SYNC and SCRUB operations are processed by this command.">

    <span style="float:right;">
        <input class="snaprun snaphelptip" type="button" id="crontest" value="RUN MAINTENANCE CRONJOB" title="Runs the SnapRAID maintenance now.">
    </span><br>

    <strong>Advanced Parameters:</strong>
    <input type="checkbox" id="snapsync-forcezero" value="snapsync-forcezero">
    <label for="snapsync-forcezero" title="Forces the insecure operation of syncing a file with zero size that before was not. If SnapRAID detects a such condition, it stops proceeding unless you specify this option." class="snaphelptip">(Sync) Force Zero</label>
    <input type="checkbox" id="snapsync-forceempty" value="snapsync-forceempty">
    <label for="snapsync-forceempty" title="Forces the insecure operation of syncing a disk with all the files missing. If SnapRAID detects that all the files originally present in the disk are missing or rewritten, it stops proceeding unless you specify this option." class="snaphelptip">(Sync) Force Empty</label>
    <input type="checkbox" id="snapsync-forcefull" value="snapsync-forcefull">
    <label for="snapsync-forcefull" title="In SYNC forces a full recomputation of the parity. This option can be used when you add a new parity level, or if you reverted back to an old content file using a more recent parity data. Instead of recreating the parity from scratch, this allows to reuse the hashes present in the content file to validate data, and to maintain data protection during the SYNC process using the parity data you have." class="snaphelptip">(Sync) Force Full</label>
    <input type="checkbox" id="snapcheck-auditonly" value="snapcheck-auditonly">
    <label for="snapcheck-auditonly" title="In CHECK verifies the hash of the files without doing any kind of check on the parity data. If you are interested in checking only the file data this option can speed up a lot the checking process." class="snaphelptip">(Check) Audit Only</label>
    <span style="float:right;margin-right:10px"><a href="https://www.snapraid.it/manual" target="_blank" title="SnapRAID User Manual"><i class="fa fa-file-text-o"></i> User Manual</a> / <a href="https://www.snapraid.it/faq" target="_blank" title="SnapRAID FAQ"><i class="fa fa-question-circle-o"></i> Frequently Asked Questions</a></span>
    <br><strong>Advanced Filters:</strong>
    (Check/Fix) <input type="text" id="snapfix-pattern" class="narrow snaphelptip" title="Run a command only on a certain set of data." placeholder="Path Pattern (See Manual)">
    (Check/Fix) <input type="text" id="snapfix-diskpattern" title="Run a command only on a certain disk." class="narrow snaphelptip" placeholder="Disk Name">

    <br><br>

    <div><strong>INFORMATION:</strong></div>
    <div>When using SnapRAID on top of Unraid's parity, always attempt to recover drive failures using Unraid's parity first, before using any SnapRAID recovery functions.</div>
    <div>Ideally you can restore a drive failure with Unraid and then fix any file level corruption on the recovered drive using a previous (non-corrupted) SnapRAID snapshot.</div>
    <div>A failing drive may write bogus data before Unraid disables it (if at all), and SnapRAID may fill that gap to recover from corruption using a sync state from before that.</div>
    
    <br>

    <table class="tablesorter snapdisks">
        <thead>
            <tr>
                <th colspan="10"><strong>ARRAY OVERVIEW WITH INDIVIDUAL DISKS</strong> <span style="text-transform: none;float:right;"><span style="margin-left:10px;"><strong>Last Sync:</strong> <?=$snap_lastsync_html?></span><span style="margin-left:10px;"><strong>Last Scrub:</strong> <?=$snap_lastscrub_html?></span></span></th>
            </tr>
            <tr>
                 <th><strong>Disk Type</strong></th><th><strong>Disk Name</strong></th><th><strong>Mountpoint</strong></th><th><strong>Mounted</strong></th><th><strong>FileSystem</strong></th><th><strong>Total Space</strong></th><th><strong>Used Space</strong></th><th><strong>Free Space</strong></th><th><strong>Utilization</strong></th><th><strong>Disk-Specific Operations</strong></th>
            </tr>
        </thead>
        <tbody>
            <?
            if(!empty($dwsnap_parity_disks) || !empty($dwsnap_data_disks)) {
                foreach ($dwsnap_parity_disks as $snap_parity_disk){
                    $snap_disk_fs = htmlspecialchars(shell_exec("cat /etc/mtab | grep " . $snap_parity_disk[2] . " | awk '{print $3}'") ?? "-");
                    $snap_disk_util = htmlspecialchars(shell_exec("df -h | grep " . $snap_parity_disk[2] . " | awk '{print $5}'") ?? "-");
                    $snap_disk_free = htmlspecialchars(shell_exec("df -h | grep " . $snap_parity_disk[2] . " | awk '{print $4}'") ?? "-");
                    $snap_disk_used = htmlspecialchars(shell_exec("df -h | grep " . $snap_parity_disk[2] . " | awk '{print $3}'") ?? "-");
                    $snap_disk_total = htmlspecialchars(shell_exec("df -h | grep " . $snap_parity_disk[2] . " | awk '{print $2}'") ?? "-");
                    $snap_disk_status = ($snap_disk_fs !== "-") ? "<i class='fa fa-check green-text'></i>" : "<i class='fa fa-times red-text'></i>"; 
                    echo("<tr><td class='snapdisktype'>PARITY</td><td>$snap_parity_disk[1]</td><td><a class='view' href='/Shares/Browse?dir=$snap_parity_disk[2]/' target='_blank'><i class='icon-u-tab' title='Browse $snap_parity_disk[2]/'></i></a>$snap_parity_disk[2]</td><td>$snap_disk_status</td><td>$snap_disk_fs</td><td>$snap_disk_total</td><td>$snap_disk_used</td><td>$snap_disk_free</td><td>$snap_disk_util</td><td><input type='button' class='snaprun snaphelptip' id='$snap_parity_disk[1]-check' value='Check' title='Verify all the files and the parity data. It works like FIX, but it only simulates a recovery and no changes are written. This command only processes the selected disk.'><input type='button' class='snaprun snaphelptip' id='$snap_parity_disk[1]-fix' value='Fix' title='Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it is reverted to the stored snapshot. The FIX command does not differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC. This command only processes the selected disk.'><input type='button' class='snaprun snaphelptip' id='$snap_parity_disk[1]-fixmissing' value='Fix Missing' title='Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it is reverted to the stored snapshot. The FIX command does not differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC. Only processes missing or deleted files on the selected disk.'></td></tr>");
                }
                foreach ($dwsnap_data_disks as $snap_data_disk){
                    $snap_disk_fs = htmlspecialchars(shell_exec("cat /etc/mtab | grep " . $snap_data_disk[2] . " | awk '{print $3}'") ?? "-");
                    $snap_disk_util = htmlspecialchars(shell_exec("df -h | grep " . $snap_data_disk[2] . " | awk '{print $5}'") ?? "-");
                    $snap_disk_free = htmlspecialchars(shell_exec("df -h | grep " . $snap_data_disk[2] . " | awk '{print $4}'") ?? "-");
                    $snap_disk_used = htmlspecialchars(shell_exec("df -h | grep " . $snap_data_disk[2] . " | awk '{print $3}'") ?? "-");
                    $snap_disk_total = htmlspecialchars(shell_exec("df -h | grep " . $snap_data_disk[2] . " | awk '{print $2}'") ?? "-");
                    $snap_disk_status = ($snap_disk_fs !== "-") ? "<i class='fa fa-check green-text'></i>" : "<i class='fa fa-times red-text'></i>"; 
                    echo("<tr><td class='snapdisktype'>DATA</td><td>$snap_data_disk[1]</td><td><a class='view' href='/Shares/Browse?dir=$snap_data_disk[2]/' target='_blank'><i class='icon-u-tab' title='Browse $snap_data_disk[2]/'></i></a>$snap_data_disk[2]</td><td>$snap_disk_status</td><td>$snap_disk_fs</td><td>$snap_disk_total</td><td>$snap_disk_used</td><td>$snap_disk_free</td><td>$snap_disk_util</td><td><input type='button' class='snaprun snaphelptip' id='$snap_data_disk[1]-check' value='Check' title='Verify all the files and the parity data. It works like FIX, but it only simulates a recovery and no changes are written. This command only processes the selected disk.'><input type='button' class='snaprun snaphelptip' id='$snap_data_disk[1]-fix' value='Fix' title='Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it is reverted to the stored snapshot. The FIX command does not differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC. This command only processes the selected disk.'><input type='button' class='snaprun snaphelptip' id='$snap_data_disk[1]-fixmissing' value='Fix Missing' title='Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it is reverted to the stored snapshot. The FIX command does not differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC. Only processes missing or deleted files on the selected disk.'></td></tr>");
                }
            }
            else {
                echo("<tr><td colspan='10'><em>There are no disks configured</em></td></tr>");
            }
            ?>
        </tbody>
    </table>
</form> 

<script type="text/javascript">
function getSnapLogs() {
    $.get('/plugins/dwsnap/include/dwsnap_logger.php',function(data) {
        if (data) { 
            $('#logviewer').html(data); 
	        var pre = $(".snaplog");
	        pre.scrollTop(pre.prop("scrollHeight"));
	    }
    });
    clearTimeout(timers.getSnapLogs);
    timers.getSnapLogs = setTimeout(getSnapLogs, 1000);
}
function getSnapStatus() {
    $.get('/plugins/dwsnap/include/dwsnap_status.php',function(data) {
        if (data) { 
            if(data === "RUNNING:YES") {
                $('#snapstatusicon').show();
                $('.snaprun').prop('disabled', true);
                $('.snapnotrun').prop('disabled', false);
            } else if (data === "RUNNING:NO") {
                if($('#snapstatusicon').is(":visible")) {
                    location = '/Settings/dwsnapOps';
                }
                $('#snapstatusicon').hide();
                $('.snaprun').prop('disabled', false);
                $('.snapnotrun').prop('disabled', true);
                $('#logcontrol').attr("class", "fa fa-refresh");
                clearTimeout(timers.getSnapLogs);
            }
	    }
    });
    clearTimeout(timers.getSnapStatus);
    timers.getSnapStatus = setTimeout(getSnapStatus, 3000);
}
function toggleSnapLogs() {
    if($('#logcontrol').attr("class") == "fa fa-refresh fa-spin") {
        $('#logcontrol').attr("class", "fa fa-refresh");
        clearTimeout(timers.getSnapLogs);
    } else {
        $('#logcontrol').attr("class", "fa fa-refresh fa-spin");
        getSnapLogs();
    }
}
$(function(){
    $('#logcontrol').click(toggleSnapLogs);

    $('#snapstatus').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('status');
        $('#snapcommands').submit();
    });
    $('#snaplist').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('list');
        $('#snapcommands').submit();
    });
    $('#snapdiff').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('diff');
        $('#snapcommands').submit();
    });
    $('#snapdup').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('dup');
        $('#snapcommands').submit();
    });
    $('#snapscrub').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('scrub');
        $('#snapcommands').submit();
    });
    $('#snapcheck').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
        $('#arg1').val('check');
        if($('#snapcheck-auditonly').is(':checked')) {
            $('#arg2').val('-a');
        }
        if($('#snapfix-diskpattern').val()) {
            $('#arg3').val('-d');
            $('#arg4').val($('#snapfix-diskpattern').val());
        }
        if($('#snapfix-pattern').val()) {
            $('#arg5').val('-f');
            $('#arg6').val($('#snapfix-pattern').val());
        }
        $('#snapcommands').submit();
    });

    $('#clearoutput').click(function(){
        $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/clearoutput');
        $('#snapcommands').submit();
    });
    $('#clearlogs').click(function(){
        swal({
            title: "Are you sure?",
            text: "This action will delete any stored SnapRAID logfiles.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Clear All Logs",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/clearlogs');
                $('#snapcommands').submit();
            });
    });
    $('#snapstop').click(function(){
        swal({
            title: "Are you sure?",
            text: "This action will (gracefully) stop all running SnapRAID instances.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Stop Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/stop');
                $('#snapcommands').submit();
            });
    });
    $('#snapkill').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This action will kill all running SnapRAID instances.<br>Be advised data corruption can be a result of this action.",
            type: "error",
            showCancelButton: true,
            confirmButtonText: "Kill Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/kill');
                $('#snapcommands').submit();
            });
    });

    $('#snapsync').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Updates the parity information. All the modified files in the disk array are read, and the corresponding parity data is updated.<br><br>Takes a snapshot, the base for all recoveries.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('sync');
                if($('#snapsync-forcezero').is(':checked')) {
                    $('#arg2').val('-Z');
                }
                if($('#snapsync-forceempty').is(':checked')) {
                    $('#arg3').val('-E');
                }
                if($('#snapsync-forcefull').is(':checked')) {
                    $('#arg4').val('-F');
                }
                $('#snapcommands').submit();
            });
    });  
    $('#snaphashedsync').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Updates the parity information. All the modified files in the disk array are read, and the corresponding parity data is updated.<br><br>Takes a snapshot, the base for all recoveries.<br><br>A preliminary hashing phase of all the new data, to have an additional verification before the actual parity computation, is performed.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('sync');
                $('#arg2').val('-h');
                if($('#snapsync-forcezero').is(':checked')) {
                    $('#arg3').val('-Z');
                }
                if($('#snapsync-forceempty').is(':checked')) {
                    $('#arg4').val('-E');
                }
                if($('#snapsync-forcefull').is(':checked')) {
                    $('#arg5').val('-F');
                }
                $('#snapcommands').submit();
            });
    });
    $('#snaptouch').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Sets arbitrarily the sub-second time-stamp of all the files that have it at zero. This improves the SnapRAID capability to recognize moved and copied files as it makes the time-stamp almost unique.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('touch');
                $('#snapcommands').submit();
            });
    });
    $('#snapfix').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot. This command doesn't differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC.<br><br>If no other option is specified the full array is processed. Use the filter options to select a subset of files or disks to operate on.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('fix');
                if($('#snapfix-diskpattern').val()) {
                    $('#arg2').val('-d');
                    $('#arg3').val($('#snapfix-diskpattern').val());
                }
                if($('#snapfix-pattern').val()) {
                    $('#arg4').val('-f');
                    $('#arg5').val($('#snapfix-pattern').val());
                }
                $('#snapcommands').submit();
            });
    });
    $('#snapfixmissing').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot.<br><br>Only the files missing/deleted from the array are processed.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('fix');
                $('#arg2').val('-m');
                if($('#snapfix-diskpattern').val()) {
                    $('#arg3').val('-d');
                    $('#arg4').val($('#snapfix-diskpattern').val());
                }
                if($('#snapfix-pattern').val()) {
                    $('#arg5').val('-f');
                    $('#arg6').val($('#snapfix-pattern').val());
                }
                $('#snapcommands').submit();
            });
    });
    $('#snapfixerrors').click(function(){
        swal({
            title: "Destructive Operation",
            text: "This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot.<br><br>Only files that have blocks marked with silent or input/output errors during previous SYNC and SCRUB operations are processed.",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start');
                $('#arg1').val('fix');
                $('#arg2').val('-e');
                if($('#snapfix-diskpattern').val()) {
                    $('#arg3').val('-d');
                    $('#arg4').val($('#snapfix-diskpattern').val());
                }
                if($('#snapfix-pattern').val()) {
                    $('#arg5').val('-f');
                    $('#arg6').val($('#snapfix-pattern').val());
                }
                $('#snapcommands').submit();
            });
    });
    $('#crontest').click(function(){
        swal({
            title: "Are you sure?",
            text: "This action is <u>not simulated</u>, it will really run (as configured).",
            type: "warning",
            showCancelButton: true,
            confirmButtonText: "Start Operation",
            html: true
            },
            function(){
                $('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/crontest');
                $('#snapcommands').submit();
            });
    });

    <?
    if(!empty($dwsnap_parity_disks) || !empty($dwsnap_data_disks)) {
        foreach ($dwsnap_parity_disks as $snap_parity_disk) {
            echo("\$('#".$snap_parity_disk[1]."-check').click(function(){\$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('check'); \$('#arg2').val('-d'); \$('#arg3').val('".$snap_parity_disk[1]."'); \$('#snapcommands').submit(); });\n");
            echo("\$('#".$snap_parity_disk[1]."-fix').click(function(){ swal({ title: \"Destructive Operation\", text: \"This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot. This command doesn't differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC.<br><br>This command only processes the selected disk.\", type: \"warning\", showCancelButton: true, confirmButtonText: \"Start Operation\", html: true }, function(){ \$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('fix'); \$('#arg2').val('-d'); \$('#arg3').val('".$snap_parity_disk[1]."'); \$('#snapcommands').submit(); }); });\n");
            echo("\$('#".$snap_parity_disk[1]."-fixmissing').click(function(){ swal({ title: \"Destructive Operation\", text: \"This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot. This command doesn't differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC.<br><br>Only processes missing or deleted files on the selected disk.\", type: \"warning\", showCancelButton: true, confirmButtonText: \"Start Operation\", html: true }, function(){ \$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('fix'); \$('#arg2').val('-m'); \$('#arg3').val('-d'); \$('#arg4').val('".$snap_parity_disk[1]."'); \$('#snapcommands').submit(); }); });\n");
        }
        foreach ($dwsnap_data_disks as $snap_data_disk) {
            echo("\$('#".$snap_data_disk[1]."-check').click(function(){\$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('check'); \$('#arg2').val('-d'); \$('#arg3').val('".$snap_data_disk[1]."'); \$('#snapcommands').submit(); });\n");
            echo("\$('#".$snap_data_disk[1]."-fix').click(function(){ swal({ title: \"Destructive Operation\", text: \"This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot. This command doesn't differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC.<br><br>This command only processes the selected disk.\", type: \"warning\", showCancelButton: true, confirmButtonText: \"Start Operation\", html: true }, function(){ \$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('fix'); \$('#arg2').val('-d'); \$('#arg3').val('".$snap_data_disk[1]."'); \$('#snapcommands').submit(); }); });\n");
            echo("\$('#".$snap_data_disk[1]."-fixmissing').click(function(){ swal({ title: \"Destructive Operation\", text: \"This is a <u>potentially destructive</u> array operation. That means it will change either your parity, your protected files or both. Please make sure you consulted the <a href='https://www.snapraid.it/manual' target='_blank'>SnapRAID manual</a> and <u>fully understand what you are about to do</u> before proceeding with this operation.<br><br>Fix all the files and the parity data. All the files and the parity data are compared with the snapshot state saved in the last SYNC. If a difference is found, it's reverted to the stored snapshot. This command doesn't differentiate between errors and intentional modifications. It unconditionally reverts the file state to the last SYNC.<br><br>Only processes missing or deleted files on the selected disk.\", type: \"warning\", showCancelButton: true, confirmButtonText: \"Start Operation\", html: true }, function(){ \$('#command').val('/usr/local/emhttp/plugins/dwsnap/scripts/start'); \$('#arg1').val('fix'); \$('#arg2').val('-m'); \$('#arg3').val('-d'); \$('#arg4').val('".$snap_data_disk[1]."'); \$('#snapcommands').submit(); }); });\n");
        }
    }
    ?>

    getSnapStatus()
    getSnapLogs();
    
    $('.snaphelptip').tooltipster({
        maxWidth: 300
    });

    // dynamix plugin update api
    <?if (function_exists('plugin_update_available') && $version = plugin_update_available('dwsnap')):?>
        showNotice('SnapRAID <?=htmlspecialchars($version);?> available. <a>Update</a>','dwsnap');
        $('#user-notice a').on('click', function () {
        $('#user-notice').empty();
    });
    <?endif;?>
});
</script>
