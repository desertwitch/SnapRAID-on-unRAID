#!/bin/bash
#
# Copyright Derek Macias (parts of code from NUT package)
# Copyright macester (parts of code from NUT package)
# Copyright gfjardim (parts of code from NUT package)
# Copyright SimonF (parts of code from NUT package)
# Copyright Oliver Cervera (parts of code from snapraid-aio-script)
# Copyright desertwitch
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License 2
# as published by the Free Software Foundation.
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
umask 000
SNAP_BIN="/usr/bin/snapraid"
SNAP_CONF="/etc/snapraid.conf"
CONFIG="/boot/config/plugins/dwsnap/dwsnap.cfg"

[ -e "$CONFIG" ] && source $CONFIG

KNOWNCMDS=("status" "diff" "sync" "scrub" "list" "dup" "up" "down" "touch" "smart" "pool" "check" "fix")
for KNOWNCMD in "${KNOWNCMDS[@]}"; do
    if [ "$1" == "$KNOWNCMD" ]; then
        CMDKNOWN="YES"
    fi
done
if [ ! "$CMDKNOWN" == "YES" ]; then
    echo "A small helper program to log SnapRAID's output into UNRAID's web interface."
    echo "Usage: snapraid-runner status|diff|sync|scrub|list|dup|up|down|touch|smart|pool|check|fix [options]"
    exit 1
fi

if pgrep -x snapraid >/dev/null 2>&1 || pgrep -x snapraid-cron >/dev/null 2>&1; then
    echo "SnapRAID is already running somewhere, exiting..." | tee >(logger -t "snapraid-runner")
    exit 1
fi

[ "$PRIO" == "idle" ] && SNAP_BIN="ionice -c 3 /usr/bin/snapraid"
[ "$PRIO" == "besteffort" ] && SNAP_BIN="ionice -c 2 /usr/bin/snapraid"
[ "$PRIO" == "realtime" ] && SNAP_BIN="ionice -c 1 /usr/bin/snapraid"

signal_exit_snapraid() {
    OPTIME=$(date +"%d.%m.%Y %H:%M:%S %Z")
    echo "$OPTIME" >/var/log/snapraid/lastfinish
    echo "################################################################" 2>&1 | tee -a /var/log/snapraid/snaplog
    echo "### ${BIGOP} INTERRUPTED [SIGTERM]: ${OPTIME}" 2>&1 | tee -a /var/log/snapraid/snaplog
    cp "/var/log/snapraid/snaplog" "/var/log/snapraid/${1}-${LOGTIME}.log"
    exit 1
}

BIGOP="$(echo "$1" | awk '{print toupper($0)}')"

rm -f /var/log/snapraid/lastfinish
LOGTIME=$(date +"%Y%m%d-%H%M%S")
OPTIME=$(date +"%d.%m.%Y %H:%M:%S %Z")

echo "$OPTIME" >/var/log/snapraid/laststart
echo "### ${BIGOP} STARTED: ${OPTIME}" 2>&1 | tee /var/log/snapraid/snaplog
echo "### $SNAP_BIN -c $SNAP_CONF -l \"/var/log/snapraid/${1}-${LOGTIME}.raw.log\" $* >>/var/log/snapraid/snaplog 2>&1" 2>&1 | tee -a /var/log/snapraid/snaplog 
echo "################################################################" 2>&1 | tee -a /var/log/snapraid/snaplog

trap 'signal_exit_snapraid $1' SIGTERM

if [ "$1" == "sync" ]; then
    $SNAP_BIN -c $SNAP_CONF -l "/var/log/snapraid/${1}-${LOGTIME}.raw.log" "$@" 2>&1 | tee -a /var/log/snapraid/snaplog
    if [ "${PIPESTATUS[0]}" -eq 0 ]; then
        OPTIME=$(date +"%d.%m.%Y %H:%M:%S %Z")
        echo "$OPTIME" > /boot/config/plugins/dwsnap/config/lastsync
    else
        OPTIME=$(date +"%d.%m.%Y %H:%M:%S %Z")
    fi
elif [ "$1" == "scrub" ]; then
    $SNAP_BIN -c $SNAP_CONF -l "/var/log/snapraid/${1}-${LOGTIME}.raw.log" "$@" 2>&1 | tee -a /var/log/snapraid/snaplog
    if [ "${PIPESTATUS[0]}" -eq 0 ]; then
        OPTIME=$(date +"%d.%m.%Y %H:%M:%S %Z")
        echo "$OPTIME" > /boot/config/plugins/dwsnap/config/lastscrub
    else
        OPTIME=$(date +"%d.%m.%Y %H:%M:%S %Z")
    fi
else
    $SNAP_BIN -c $SNAP_CONF -l "/var/log/snapraid/${1}-${LOGTIME}.raw.log" "$@" 2>&1 | tee -a /var/log/snapraid/snaplog 
    OPTIME=$(date +"%d.%m.%Y %H:%M:%S %Z")
fi

echo "$OPTIME" >/var/log/snapraid/lastfinish
echo "################################################################" 2>&1 | tee -a /var/log/snapraid/snaplog
echo "### ${BIGOP} FINISHED: ${OPTIME}" 2>&1 | tee -a /var/log/snapraid/snaplog
cp "/var/log/snapraid/snaplog" "/var/log/snapraid/${1}-${LOGTIME}.log"
