<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "dwsnap">
<!ENTITY author    "desertwitch">
<!ENTITY version   "2024.09.13">
<!ENTITY launch    "Settings/dwsnapOps">
<!ENTITY gitURL    "https://raw.githubusercontent.com/&author;/SnapRAID-on-unRAID/main">
<!ENTITY pluginURL "&gitURL;/plugin/&name;.plg">
<!ENTITY pkgURL    "&gitURL;/packages">
<!ENTITY plgPATH   "/boot/config/plugins/&name;">
<!ENTITY plgNAME   "dwsnap-2024.09.13-x86_64-1">
<!ENTITY plgMD5    "c7ed6b64e4b93ece7fe5102ae59810d0">
<!ENTITY emhttp    "/usr/local/emhttp/plugins/&name;">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" support="https://forums.unraid.net/topic/163648-plugin-snapraid-on-unraid/" min="6.8.3" icon="scissors">

<CHANGES>
## SnapRAID on UNRAID
###2024.09.16
- fix: reworked bash scripts to better standards with more safety for strange configurational states
###2024.09.13
- important fix: address possible flock condition causing installation script to stall (thanks AgentXXL)
###2024.09.12
- fix: made optical changes regarding wording, positioning and helptexts on the SnapRAID Settings page
- new: use of plugin usage metric functions to aid development of new features and planning for plugin updates (toggleable)
###2024.09.09
- fix: improvements to error and backend communication handling
###2024.08.19
- fix: reordered the warning messages in footer for better visibility
- fix: no longer base the number of synced files on number of differences
- fix: do not consider disks as online when they are spun down and/or sleeping
- fix: check for existence and not being regular when loading configuration files
###2024.08.07
- new: switched from legacy to more recent update checking mechanism
###2024.08.05b
- new: array maintenance integration for healthchecks.io uptime monitoring service
- fix: ionice and specific process evaluations no longer cause respective operations to fail
###2024.08.02
- fix: allow disk directives anywhere on the system and not just inside /mnt
- fix: no longer evaluate mtab for filesystem but rather same process as for space
- fix: also show in GUI when maintenance fails because it was not enabled in settings
- fix: make a failed maintenance more visible in logfiles by ending with a failure message
###2024.07.17
- fix: improved interrupt signal handling for backend programs (SIGINT)
- fix: improved the error handling and documentation for most backend scripts
- fix: made logged messages more visible using tags and priorities where possible
###2024.07.15a
- new: added maintenance setting to force sync operation despite no differences reported
- new: added maintenance setting to force touch operation despite no files touchable reported
- new: added to report of any operation the name of the array that is being operated on as prefix
- new: added to report of maintenance touch operation a numeric count of touchable/touched files
- fix: addressed an issue where difference counts above 8 digits were not parseable by maintenance
###2024.07.14
- fix: introduced additional safeguards against non-parseable difference counts
- fix: introduced additional safeguards against malformed user-configured settings
###2024.07.10
- fix: trailing slashes on data disk directives are no longer enforced
- fix: refactored the configuration parsing mechanisms to be more flexible
- fix: refactored specific code into generalized functions to be more flexible
###2024.07.09b
- fix: refactored various malformed configuration warnings to be more specific
- fix: refactored various sections of the documentation with further clarifications
- fix: added further information regarding data disk directives inside the configuration
- fix: added further information regarding function of tmpfs disk (which is located in RAM)
###2024.07.08b
- new: restructured compilation process and streamlined package structure
- new: added further detailed information about parity overhead considerations
- fix: minor changes to error handling so it is more consistent between functions
###2024.06.28a
- new: several improvements for array dashboards and footers
- fix: refactored and improved frontend scripts to be more flexible
###2024.06.26
- fix: improved safeguards against malformed configurations
- fix: improved safeguards against XSS cross-site vulnerabilities
###2024.06.25c
- new: added front page dashboards for created arrays (for versions 6.12+)
- fix: adapt decimal handling in disk space translation functions to unraid standards
###2024.06.23a
- fix: changed units from KiB to KB
- fix: also match mountpoints located in UD subdirectories of /mnt
- fix: renamed generic function names to avoid declaration collisions with other plugins
###2024.06.10
- new: added io process priority setting on a per array basis
- fix: removed too generous wildcard when deleting array or array logfiles
###2024.06.08
- new: support for maintaining multiple arrays
- fix: complete revision of GUI code including various minor fixes
- fix: complete revision of backend code including various minor fixes
- release note: existing configuration will be migrated to multi array layout
- release note: just to be sure please do take note of configuration before updating
###2024.06.04
- fix: minor modifications to improve permissioning for binaries
- fix: minor modifications with further clarifications for documentation
###2024.06.02
- fix: minor changes to array operation notification handling
###2024.05.30
- fix: relax excessive autosave value in default configuration and explain calculation
- note for existing users: autosave value is in total GB read from all disks in the array
- note for existing users: autosave of 1500 GB with 10 disks saves SYNC state every 150 GB
###2024.05.29
- new: added additional check selectors to check only missing or error files
- new: add setting to generally control the generation of raw operation reports
- new: add additional parameter to write a raw operation report to another location
###2024.05.27
- fix: reduce the GUI loading times by requesting more specific mountpoint information
###2024.05.26
- new: add autosave parameter to default configuration for intermediate saves
- new: report amount in notifications when changes are synced during maintenance
- new: minor changes to documentation improving understanding regarding parity processes
###2024.05.18
- new: add setting to configure the overdue warning threshold for SYNC in GUI
- new: add setting to configure the overdue warning threshold for SCRUB in GUI
- fix: make operations page and footer consistent when showing overdue warnings
###2024.05.10
- new: setting for user configurable hard-kill timeout on array or system shutdown
- new: improvements to handling interruptions and premature exits in critical situations
###2024.05.06
- new: add setting to only be notified in case of maintenance failures
- fix: also output specific errors to stdout for directly callable helpers
- fix: helpers no longer exiting with erroneous return code despite overall success
###2024.04.29
- new: minor changes in preparation of release to community applications
###2024.04.27
- fix: allocate RAM disk for operational output to prevent filling up rootfs
- fix: added some additional safeguards and documentation for when problems occur
###2024.04.26
- new: improved both documentation and interruption signal handling
###2024.04.24
- new: clarified logs written by maintenance script some more
- new: include only .log files when downloading log package from GUI
- new: now automatically reload GUI when array configuration was changed
- new: also inform user how long operation was running in case of interruption
- new: show warning in GUI when one or more of the disks are missing or unmounted
- new: minified js and css dependencies to reduce overall loading times and package size
###2024.04.22
- new: show different levels of parity accordingly in GUI array overview table
- new: show and confirm actual command line before running any destructive operation on array
- new: added additional parameters to GUI for advanced recovery options and safeguard overrides
- new: added a notification setting to GUI to be notified of completion of manual array operations
###2024.04.20
- release note: welcome to the first version of the SnapRAID package.
</CHANGES>

<!--
stop already running instances before doing anything
-->
<FILE Run="/bin/bash">
<INLINE>
echo "Making sure all running SnapRAID instances are stopped (before install/upgrade)..."
if [ -x /usr/local/emhttp/plugins/dwsnap/scripts/shutdown ]; then
    /usr/local/emhttp/plugins/dwsnap/scripts/shutdown nobackup
fi
killall snapraid-poller >/dev/null 2>&amp;1

if [ -f /boot/config/plugins/dwsnap/dwsnap.cfg ]; then
    if [ ! -f /boot/config/plugins/dwsnap/config/primary.cfg ]; then
        touch /tmp/snapmigration
    fi
fi

echo ""
exit 0
</INLINE>
</FILE>

<!--
install or upgrade dependency files
-->
<FILE Name="&plgPATH;/snapraid-12.3-x86_64-5.txz" Min="6.8.3" Run="upgradepkg --install-new">
<URL>&pkgURL;/snapraid-12.3-x86_64-5.txz</URL>
<MD5>f1214327ede765a4830b7f68c7139787</MD5>
</FILE>

<!--
install or upgrade the plugin itself
-->
<FILE Name="&plgPATH;/&plgNAME;.txz" Min="6.8.3" Run="upgradepkg --install-new">
<URL>&gitURL;/archive/&plgNAME;.txz</URL>
<MD5>&plgMD5;</MD5>
</FILE>

<!--
run the post-installation scripts
-->
<FILE Run="/bin/bash">
<INLINE> 
echo ""

if [ -f /tmp/snapmigration ]; then
    if [ -x /usr/local/emhttp/plugins/dwsnap/scripts/migrate_config ]; then
        /usr/local/emhttp/plugins/dwsnap/scripts/migrate_config
    fi
fi

if [ -x /usr/local/emhttp/plugins/dwsnap/scripts/write_config ]; then
    /usr/local/emhttp/plugins/dwsnap/scripts/write_config
fi

/etc/cron.daily/snapraid-poller conntest >/dev/null 2>&amp;1 &amp;
echo ""
echo "-------------------------------------------------------------"
echo " SnapRAID on UNRAID has been installed."
echo " Version: &version; / Plugin Maintainer: &author;"
echo "-------------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
definition for uninstallation of the plugin
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
echo "Making sure all running SnapRAID instances are stopped (before uninstall)..."
if [ -x /usr/local/emhttp/plugins/dwsnap/scripts/shutdown ]; then
    /usr/local/emhttp/plugins/dwsnap/scripts/shutdown nobackup
fi
killall snapraid-poller >/dev/null 2>&amp;1

removepkg &plgPATH;/*.txz
rm -rf &plgPATH;/*.txz
rm -rf &emhttp;

if mountpoint -q /var/lib/snapraid; then 
    rm -rf /var/lib/snapraid/*
    umount -l /var/lib/snapraid
    sleep 1
fi

rm -rf /var/lib/snapraid

rm -f /boot/config/plugins/dynamix/dwsnap*.cron
sleep 1
update_cron
sleep 1

rm -f /boot/config/plugins/dwsnap/config/*-snaplog
rm -f /etc/cron.daily/snapraid-poller >/dev/null 2>&amp;1

echo ""
echo "-----------------------------------------------------------"
echo " SnapRAID on UNRAID has been removed."
echo " Version: &version; / Plugin Maintainer: &author;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

</PLUGIN>
